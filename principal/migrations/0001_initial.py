# Generated by Django 4.1.4 on 2023-02-11 19:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Chamada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_da_chamada', models.DateField(auto_now_add=True, verbose_name='Data da chamada')),
            ],
        ),
        migrations.CreateModel(
            name='Discente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50)),
                ('sobrenome', models.CharField(max_length=100)),
                ('genero', models.CharField(choices=[('Masculino', 'Masculino'), ('Feminino', 'Feminino'), ('Outro', 'Outro')], default='Outro', max_length=30, verbose_name='Gênero')),
                ('email', models.EmailField(max_length=254)),
                ('senha', models.CharField(help_text='A senha deverá ter no mínimo 8 caracteres. Deverá ter números e letras.', max_length=128)),
                ('cpf', models.CharField(blank=True, max_length=14, verbose_name='CPF')),
                ('rg', models.CharField(blank=True, max_length=13, verbose_name='RG')),
                ('data_de_nascimento', models.DateField(blank=True, default='01/01/2000', null=True, verbose_name='Data de Nascimento')),
                ('foto', models.ImageField(blank=True, upload_to='fotos_dos_discentes/', verbose_name='Foto')),
                ('nome_responsavel', models.CharField(blank=True, max_length=250, verbose_name='Nome do responsável')),
                ('segundo_responsavel', models.CharField(blank=True, max_length=250, verbose_name='Nome do segundo responsável')),
                ('telefone1', models.CharField(blank=True, max_length=20, verbose_name='Telefone do responsável')),
                ('telefone2', models.CharField(blank=True, max_length=20, verbose_name='Telefone do segundo responsável')),
                ('endereco', models.CharField(blank=True, max_length=250, verbose_name='Endereço do aluno')),
                ('nis', models.CharField(blank=True, max_length=15, verbose_name='NIS do aluno')),
                ('situacao', models.CharField(choices=[('Em andamento', 'Em andamento'), ('Aprovado', 'Aprovado'), ('Reprovado', 'Reprovado'), ('Reprovado por falta', 'Reprovado por falta'), ('Prova Final', 'Prova Final'), ('Aprovado pelo Conselho', 'Aprovado pelo Conselho'), ('Reprovado pelo Conselho', 'Reprovado pelo Conselho')], default='Em andamento', max_length=25)),
                ('pais_separados', models.BooleanField(default=False, verbose_name='Pais separados?')),
                ('pcd', models.BooleanField(default=False, verbose_name='Possui deficiência?')),
                ('pcd_detalhes', models.TextField(blank=True, verbose_name='Detalhes da deficiência')),
                ('rest_alimentar', models.BooleanField(default=False, verbose_name='Possui restrição alimentar?')),
                ('rest_alimentar_detalhes', models.TextField(blank=True, verbose_name='Detalhes da restrição alimentar')),
                ('usa_medicamentos', models.BooleanField(default=False, verbose_name='Usa medicamentos?')),
                ('usa_medicamentos_detalhes', models.TextField(blank=True, verbose_name='Detalhes dos medicamentos')),
                ('obs', models.TextField(blank=True, verbose_name='Observações do aluno')),
                ('cargo', models.CharField(default='Discente', max_length=100, verbose_name='Cargo')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Disciplina',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome da Disciplina')),
                ('carga_horaria', models.IntegerField(null=True, verbose_name='Carga Horária em horas')),
            ],
        ),
        migrations.CreateModel(
            name='Docente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50)),
                ('sobrenome', models.CharField(max_length=100)),
                ('genero', models.CharField(choices=[('Masculino', 'Masculino'), ('Feminino', 'Feminino'), ('Outro', 'Outro')], default='Outro', max_length=30, verbose_name='Gênero')),
                ('email', models.EmailField(max_length=254)),
                ('senha', models.CharField(help_text='A senha deverá ter no mínimo 8 caracteres. Deverá ter números e letras.', max_length=128)),
                ('cpf', models.CharField(blank=True, max_length=14, verbose_name='CPF')),
                ('rg', models.CharField(blank=True, max_length=13, verbose_name='RG')),
                ('data_de_nascimento', models.DateField(blank=True, default='01/01/2000', null=True, verbose_name='Data de Nascimento')),
                ('cargo', models.CharField(default='Docente', max_length=100, verbose_name='Cargo')),
                ('foto', models.ImageField(blank=True, upload_to='fotos_docentes/', verbose_name='Foto')),
                ('disciplinas', models.ManyToManyField(blank=True, related_name='docentes', to='principal.disciplina', verbose_name='Disciplinas que trabalha')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Turno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='ViceDiretor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50)),
                ('sobrenome', models.CharField(max_length=100)),
                ('genero', models.CharField(choices=[('Masculino', 'Masculino'), ('Feminino', 'Feminino'), ('Outro', 'Outro')], default='Outro', max_length=30, verbose_name='Gênero')),
                ('email', models.EmailField(max_length=254)),
                ('senha', models.CharField(help_text='A senha deverá ter no mínimo 8 caracteres. Deverá ter números e letras.', max_length=128)),
                ('cpf', models.CharField(blank=True, max_length=14, verbose_name='CPF')),
                ('rg', models.CharField(blank=True, max_length=13, verbose_name='RG')),
                ('data_de_nascimento', models.DateField(blank=True, default='01/01/2000', null=True, verbose_name='Data de Nascimento')),
                ('cargo', models.CharField(default='Vice-diretor', max_length=100, verbose_name='Cargo')),
                ('foto', models.ImageField(blank=True, null=True, upload_to='fotos_vice-diretores/', verbose_name='Foto')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Turma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, verbose_name='Nome da Turma')),
                ('turno', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='turmas', to='principal.turno')),
            ],
        ),
        migrations.CreateModel(
            name='Secretario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50)),
                ('sobrenome', models.CharField(max_length=100)),
                ('genero', models.CharField(choices=[('Masculino', 'Masculino'), ('Feminino', 'Feminino'), ('Outro', 'Outro')], default='Outro', max_length=30, verbose_name='Gênero')),
                ('email', models.EmailField(max_length=254)),
                ('senha', models.CharField(help_text='A senha deverá ter no mínimo 8 caracteres. Deverá ter números e letras.', max_length=128)),
                ('cpf', models.CharField(blank=True, max_length=14, verbose_name='CPF')),
                ('rg', models.CharField(blank=True, max_length=13, verbose_name='RG')),
                ('data_de_nascimento', models.DateField(blank=True, default='01/01/2000', null=True, verbose_name='Data de Nascimento')),
                ('cargo', models.CharField(default='Secretário', max_length=100, verbose_name='Cargo')),
                ('foto', models.ImageField(blank=True, null=True, upload_to='fotos_secretarios/', verbose_name='Foto')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlanoDeCurso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_do_planejamento', models.DateField(auto_now_add=True, verbose_name='Data do Plano de curso')),
                ('area_do_conhecimento', models.CharField(max_length=25, verbose_name='Área do conhecimento')),
                ('trimestre', models.CharField(choices=[('I Trimestre', 'I Trimestre'), ('II Trimestre', 'II Trimestre'), ('III Trimestre', 'III Trimestre')], max_length=20, verbose_name='Trimestre')),
                ('campo_de_atuacao', models.TextField(blank=True, verbose_name='Campo de atução - Unidade temática')),
                ('objetos_do_conhecimento', models.TextField(blank=True, verbose_name='Objetos do conhecimento')),
                ('compentecias', models.TextField(blank=True, verbose_name='Competências')),
                ('habilidades', models.TextField(blank=True, verbose_name='Habilidades')),
                ('avaliação', models.TextField(blank=True, verbose_name='Avaliação')),
                ('disciplina', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plano_curso', to='principal.disciplina', verbose_name='Componente curricular')),
                ('docente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='principal.docente')),
            ],
        ),
        migrations.CreateModel(
            name='PlanoDeAula',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField(help_text='Formato: 01/01/2000', verbose_name='Data')),
                ('quant_aulas', models.IntegerField(verbose_name='Quantidade de aulas')),
                ('area_do_conhecimento', models.TextField(blank=True, verbose_name='Área do Conhecimento')),
                ('objetos_conhecimento', models.TextField(blank=True, verbose_name='Objetos do Conhecimento')),
                ('compentecias', models.TextField(blank=True, verbose_name='Competências')),
                ('habilidades', models.TextField(blank=True, verbose_name='Habilidades a serem desenvolvidas')),
                ('estrategias', models.TextField(blank=True, help_text='Lembrete: (Como a aula será direciona, metodologia a ser implantada).', verbose_name='Estratégias e ações - Práticas pedagógicas')),
                ('intervencao', models.CharField(choices=[(None, 'Outros'), ('Recuperação paralela', 'Recuperação paralela'), ('Acompanhamento individual', 'Acompanhamento individual'), ('Mudança na metodologia', 'Mudança na metodologia'), ('Revisão', 'Revisão'), ('Correção oral', 'Correção oral'), ('Aplicação de outra atividade que contemple a mesma habilidade', 'Aplicação de outra atividade que contemple a mesma habilidade')], max_length=650, verbose_name='Intervenção Pedagógica')),
                ('intervencao_outros', models.TextField(help_text='Caso houver outras interveções', verbose_name='Intervenção Pedagógica')),
                ('materiais', models.TextField(blank=True, verbose_name='Materiais, tecnologia e recursos utilizados:')),
                ('avaliacao', models.TextField(blank=True, help_text='Lembrete: Avaliação diagnóstica e formativa por meio de exercício diagnóstico e apresentação de trabalho oral, mediante a temática proposta da aula.', verbose_name='Avaliação')),
                ('disciplina', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plano_aula', to='principal.disciplina', verbose_name='Componente Curricular')),
                ('docente', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='plano_aula', to='principal.docente', verbose_name='Docente')),
                ('turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plano_aula', to='principal.turma', verbose_name='Ano - Série')),
            ],
        ),
        migrations.CreateModel(
            name='PlanejamentoAnual',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_do_planejamento', models.DateField(auto_now_add=True, verbose_name='Data do Planejamento')),
                ('trimestre', models.CharField(choices=[('I Trimestre', 'I Trimestre'), ('II Trimestre', 'II Trimestre'), ('III Trimestre', 'III Trimestre')], max_length=20, verbose_name='Trimestre')),
                ('unidades_tematicas', models.TextField(blank=True, verbose_name='Unidades Temáticas')),
                ('habilidades', models.TextField(blank=True, verbose_name='Habilidades')),
                ('objetos_de_conhecimento', models.TextField(blank=True, verbose_name='Objetos de conhecimento')),
                ('orientações_didaticas', models.TextField(blank=True, verbose_name='Orientações didáticas')),
                ('avaliacao', models.TextField(blank=True, verbose_name='Avaliação')),
                ('fonte', models.TextField(blank=True, verbose_name='Fonte')),
                ('disciplina', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='planejamento_anual', to='principal.disciplina', verbose_name='Componente curricular')),
                ('docente', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='planejamentos', to='principal.docente', verbose_name='Docente')),
            ],
        ),
        migrations.CreateModel(
            name='NotasDiscentes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('faltas', models.IntegerField(default=0, verbose_name='Número de faltas')),
                ('nota1', models.FloatField(default=0, verbose_name='Primeira nota')),
                ('nota2', models.FloatField(default=0, verbose_name='Segunda nota')),
                ('nota3', models.FloatField(default=0, verbose_name='Terceira nota')),
                ('media', models.FloatField(default=0, verbose_name='Médias das notas')),
                ('situacao', models.CharField(choices=[('Em andamento', 'Em andamento'), ('Aprovado', 'Aprovado'), ('Reprovado', 'Reprovado'), ('Reprovado por falta', 'Reprovado por falta'), ('Prova Final', 'Prova Final')], default='Em andamento', max_length=50, verbose_name='Situação do aluno')),
                ('nota_pf', models.FloatField(blank=True, default=0, verbose_name='Nota da Prova Final')),
                ('obs', models.TextField(blank=True, verbose_name='Observações do aluno')),
                ('discente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notas_discentes', to='principal.discente', verbose_name='Nome do Discente')),
                ('disciplina', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notas_discentes', to='principal.disciplina', verbose_name='Nome da disciplina')),
            ],
        ),
        migrations.CreateModel(
            name='Funcionario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50)),
                ('sobrenome', models.CharField(max_length=100)),
                ('genero', models.CharField(choices=[('Masculino', 'Masculino'), ('Feminino', 'Feminino'), ('Outro', 'Outro')], default='Outro', max_length=30, verbose_name='Gênero')),
                ('email', models.EmailField(max_length=254)),
                ('senha', models.CharField(help_text='A senha deverá ter no mínimo 8 caracteres. Deverá ter números e letras.', max_length=128)),
                ('cpf', models.CharField(blank=True, max_length=14, verbose_name='CPF')),
                ('rg', models.CharField(blank=True, max_length=13, verbose_name='RG')),
                ('data_de_nascimento', models.DateField(blank=True, default='01/01/2000', null=True, verbose_name='Data de Nascimento')),
                ('cargo', models.CharField(max_length=100, verbose_name='Cargo')),
                ('foto', models.ImageField(blank=True, upload_to='fotos_funcionarios/', verbose_name='Foto')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Documentos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documentos', models.FileField(blank=True, upload_to='documentos/', verbose_name='Documentos enviados')),
                ('docente', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='documentos', to='principal.docente')),
            ],
        ),
        migrations.AddField(
            model_name='discente',
            name='disciplinas',
            field=models.ManyToManyField(related_name='disciplinas', through='principal.NotasDiscentes', to='principal.disciplina'),
        ),
        migrations.AddField(
            model_name='discente',
            name='turma',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='alunos', to='principal.turma', verbose_name='Turma do aluno'),
        ),
        migrations.AddField(
            model_name='discente',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Diretor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50)),
                ('sobrenome', models.CharField(max_length=100)),
                ('genero', models.CharField(choices=[('Masculino', 'Masculino'), ('Feminino', 'Feminino'), ('Outro', 'Outro')], default='Outro', max_length=30, verbose_name='Gênero')),
                ('email', models.EmailField(max_length=254)),
                ('senha', models.CharField(help_text='A senha deverá ter no mínimo 8 caracteres. Deverá ter números e letras.', max_length=128)),
                ('cpf', models.CharField(blank=True, max_length=14, verbose_name='CPF')),
                ('rg', models.CharField(blank=True, max_length=13, verbose_name='RG')),
                ('data_de_nascimento', models.DateField(blank=True, default='01/01/2000', null=True, verbose_name='Data de Nascimento')),
                ('cargo', models.CharField(default='Diretor', max_length=100, verbose_name='Cargo')),
                ('foto', models.ImageField(blank=True, null=True, upload_to='fotos_diretores/', verbose_name='Foto')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Coordenador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50)),
                ('sobrenome', models.CharField(max_length=100)),
                ('genero', models.CharField(choices=[('Masculino', 'Masculino'), ('Feminino', 'Feminino'), ('Outro', 'Outro')], default='Outro', max_length=30, verbose_name='Gênero')),
                ('email', models.EmailField(max_length=254)),
                ('senha', models.CharField(help_text='A senha deverá ter no mínimo 8 caracteres. Deverá ter números e letras.', max_length=128)),
                ('cpf', models.CharField(blank=True, max_length=14, verbose_name='CPF')),
                ('rg', models.CharField(blank=True, max_length=13, verbose_name='RG')),
                ('data_de_nascimento', models.DateField(blank=True, default='01/01/2000', null=True, verbose_name='Data de Nascimento')),
                ('cargo', models.CharField(default='Coordenador', max_length=100, verbose_name='Cargo')),
                ('foto', models.ImageField(blank=True, null=True, upload_to='fotos_coordenadores/', verbose_name='Foto')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Chamada_Discentes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quant_faltas', models.IntegerField(default=0)),
                ('chamada', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chamadas_discentes', to='principal.chamada', verbose_name='Chamada')),
                ('discente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chamada_discentes', to='principal.discente')),
            ],
        ),
        migrations.AddField(
            model_name='chamada',
            name='disciplina',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chamadas', to='principal.disciplina'),
        ),
        migrations.AddField(
            model_name='chamada',
            name='turma',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chamadas', to='principal.turma'),
        ),
    ]
